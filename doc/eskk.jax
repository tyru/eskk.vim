*eskk.txt* *eskk*

Author:
  tyru <tyru.exe@gmail.com>
Version: X.Y.Z
License:
" NEW BSD LICENSE {{{
"   Copyright (c) 2009, tyru
"   All rights reserved.
"
"   Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
"
"       * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
"       * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
"       * Neither the name of the tyru nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
"
"   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
" }}}

==============================================================================
CONTENTS						*eskk-contents*

概要		|eskk-introduction|
インターフェース			|eskk-interface|
  キーマッピング		|eskk-keymappings|
  変数			|eskk-variables|
  コマンド			|eskk-commands|
  関数			|eskk-functions|
アルファベットテーブル			|eskk-alphabet-table|
モード				|eskk-modes|
フェーズ				|eskk-phases|
補完			|eskk-completion|
FAQ					|eskk-faq|
TODO				|eskk-todo|
Changelog			|eskk-changelog|


==============================================================================
概要						*eskk-introduction* {{{

|eskk| はVimでパワフルなIM環境を実現することを目指して作られた、
まったく新しいプラグインです。

私達はskk.vimというプラグインもメンテナンスしています。
(もしあなたがインストールしていれば |skk| で見られるはずです)

しかしskk.vimはVim 6でも動くよう互換性を図るため、
ほとんどメンテナンス不可能になっていました。
そこで私達はeskkを開発することを決めました。

eskkは拡張された、そしてさらなる拡張性を秘めたマルチバイト環境を提供します。

}}}
==============================================================================
インターフェース				*eskk-interface* {{{
------------------------------------------------------------------------------
キーマッピング					*eskk-keymappings* {{{

<Plug>(eskk:enable) (icl)		*<Plug>(eskk:enable)*
<Plug>(eskk:disable) (icl)		*<Plug>(eskk:disable)*
<Plug>(eskk:toggle) (icl)		*<Plug>(eskk:toggle)*

	|eskk#enable()|, |eskk#disable()|, |eskk#toggle()|のキーマッピング版。


<Plug>(eskk:save-dictionary) (n)		*<Plug>(eskk:save-dictionary)*

	SKK辞書が変更されていたら (1つ以上の単語が登録されていれば)
	ユーザ辞書に保存する。
	|:EskkUpdateDictionary| や |eskk#update_dictionary()| のキーマッピング版。


デフォルトキーマッピング				*eskk-default-keymappings*
----------------------
<C-j> => <Plug>(eskk:toggle)   (icl)

}}}
------------------------------------------------------------------------------
変数					*eskk-variables* {{{


eskkが作るディレクトリに関する変数
-------------------------------------

g:eskk#directory			*g:eskk#directory*
							(デフォルト値: "~/.eskk")
	このディレクトリに様々なeskkに関する
	ファイルやディレクトリが作成されていく。


SKK辞書に関する変数
------------------

g:eskk#dictionary			*g:eskk#dictionary*
							(デフォルト値: 下を参照)
	ユーザ辞書の情報。

	この変数の定義は：
		もしユーザが定義していたら：
			文字列型なら： >
				let g:eskk#dictionary = {
				\	'path': {value},
				\	'sorted': 0,
				\	'encoding': 'utf-8',
				\}
<			辞書型なら：
				ユーザの辞書型を保存しながら
				「定義していなかったら」の値で
				補う形で追加していく
		定義していなかったら： >
				let g:eskk#dictionary = {
				\	'path': "~/.skk-jisyo",
				\	'sorted': 0,
				\	'encoding': 'utf-8',
				\}
<


g:eskk#large_dictionary		*g:eskk#large_dictionary*
							(デフォルト値: 下を参照)
	システム辞書の情報。

	この変数の定義は:
		もしユーザが定義していたら:
			文字列型なら: >
				let g:eskk#large_dictionary = {
				\	'path': {value},
				\	'sorted': 1,
				\	'encoding': 'euc-jp',
				\}
<			辞書型なら:
				ユーザの辞書型を保存しながら
				「定義していなかったら」の値で
				補う形で追加していく
		定義していなかったら: >
				let g:eskk#large_dictionary = {
				\	'path': "/usr/local/share/skk/SKK-JISYO.L",
				\	'sorted': 1,
				\	'encoding': 'euc-jp',
				\}

g:eskk#backup_dictionary	*g:eskk#backup_dictionary*
							(デフォルト値: g:eskk#dictionary.path . ".BAK")
	(TODO)

g:eskk#auto_save_dictionary_at_exit		*g:eskk#auto_save_dictionary_at_exit*
							(デフォルト値: 1)
	もし真なら1つ以上の単語が登録されていたら、
	Vimの終了時 (|VimLeave|) に自動的にユーザ辞書へ保存する。

g:eskk#dictionary_save_count		*g:eskk#dictionary_save_count*
							(デフォルト値: -1)
	もし辞書登録された単語がこの個数を超えたら
	自動的にユーザ辞書に書き込む。(|:EskkUpdateDictionary|)
	負数にすると書き込まれない。


漢字変換、アノテーションに関する変数
-----------------------------------------

g:eskk#select_cand_keys		*g:eskk#select_cand_keys*
							(デフォルト値: "asdfjkl")
	|eskk-select-candidates| で候補を選択するキー。
	キーは各文字をつなげた文字列として与えられる。

g:eskk#show_candidates_count	*g:eskk#show_candidates_count*
							(デフォルト値: 4)
	|eskk-henkan-select-phase| において、
	もしユーザが変換キーをタイプした回数がこの値を上回るなら、
	|eskk-select-candidates| に移る。

g:eskk#show_annotation			*g:eskk#show_annotation*
							(デフォルト値: 0)
	もし真なら、|eskk-select-candidates| の時にアノテーションを表示する。

g:eskk#kakutei_when_unique_candidate	*g:eskk#kakutei_when_unique_candidate*
							(デフォルト値: 0)
	もし真なら、漢字変換した時に候補が1つの場合自動的に確定する。

キーマッピングに関する変数
-----------

g:eskk#no_default_mappings		*g:eskk#no_default_mappings*
							(デフォルト値: 0)
	もし真なら、eskkは デフォルトキーマッピング (|eskk-default-keymappings|)
	を用意しない。

g:eskk#dont_map_default_if_already_mapped	*g:eskk#dont_map_default_if_already_mapped*
							(デフォルト値: 1)
	もし真でデフォルトキーマッピングがマッピングされていたら、
	マッピングしない。

g:eskk#mapped_keys				*g:eskk#mapped_keys*
							(デフォルト値: eskk#get_default_mapped_keys())
	(keycodeではなく) |key-notation| の文字列を含むリスト。
	|eskk#get_default_mapped_keys()| の値参照。
	"|"を含めたい場合、"<Bar>"と書く必要があることに気を付けること。


モードに関する変数
-------

g:eskk#initial_mode			*g:eskk#initial_mode*
							(デフォルト値: "hira")
	|eskk#enable()| が呼ばれた時、
	eskkはこの値をモードの初期値とする。

g:eskk#statusline_mode_strings	*g:eskk#statusline_mode_strings*
							(デフォルト値: 下を参照)
	|'statusline'| に表示される現在のモードの文字列。
	これは |eskk#get_stl()| の返り値を変える。

	デフォルト値は： >
	let g:eskk#statusline_mode_strings = {
	\	'hira': 'あ',
	\	'kata': 'ア',
	\	'ascii': 'aA',
	\	'zenei': 'ａ',
	\	'hankata': 'ｧｱ',
	\	'abbrev': 'aあ'
	\}
<
g:eskk#mode_use_tables			*g:eskk#mode_use_tables*
							(デフォルト値: 下を参照)
	キーはモード、値はテーブルの名前。
	モードを作る場合には |eskk-table| を参照のこと。

	デフォルト値は： >
	let g:eskk#mode_use_tables = {
	\	'hira': 'rom_to_hira',
	\	'kata': 'rom_to_kata',
	\	'zenei': 'rom_to_zenei',
	\	'hankata': 'rom_to_hankata'
	\}
<

テーブルに関する変数
--------

g:eskk#cache_table_map			*g:eskk#cache_table_map*
							(デフォルト値: 1)

g:eskk#cache_table_candidates			*g:eskk#cache_table_candidates*
							(デフォルト値: 1)


マーカーに関する変数
----------

g:eskk#marker_henkan			*g:eskk#marker_henkan*
							(デフォルト値: "▽")

g:eskk#marker_okuri			*g:eskk#marker_okuri*
							(デフォルト値: "*")

g:eskk#marker_henkan_select			*g:eskk#marker_henkan_select*
							(デフォルト値: "▼")

g:eskk#marker_jisyo_touroku			*g:eskk#marker_jisyo_touroku*
							(デフォルト値: "?")
	(TODO)

g:eskk#marker_popup			*g:eskk#marker_popup*
							(デフォルト値: "#")


補完に関する変数
-------------

g:eskk#enable_completion		*g:eskk#enable_completion*
							(デフォルト値: 0)

g:eskk#max_candidates			*g:eskk#max_candidates*
							(デフォルト値: 10)

g:eskk#compl_enter_send_keys			*g:eskk#compl_enter_send_keys*
							(デフォルト値: ["<CR>"])


カーソルの色に関する変数
---------------

g:eskk#use_color_cursor			*g:eskk#use_color_cursor*
							(デフォルト値: 1)

g:eskk#cursor_color			*g:eskk#cursor_color*
							(デフォルト値: 下を参照)
	デフォルト値は： >
    " ascii: ivory4:#8b8b83, gray:#bebebe
    " hira: coral4:#8b3e2f, pink:#ffc0cb
    " kata: forestgreen:#228b22, green:#00ff00
    " abbrev: royalblue:#4169e1
    " zenei: gold:#ffd700
    let g:eskk#cursor_color = {
    \   'ascii': ['#8b8b83', '#bebebe'],
    \   'hira': ['#8b3e2f', '#ffc0cb'],
    \   'kata': ['#228b22', '#00ff00'],
    \   'abbrev': '#4169e1',
    \   'zenei': '#ffd700',
    \}
<

その他の変数
--------

g:eskk#egg_like_newline			*g:eskk#egg_like_newline*
							(デフォルト値: 0)

g:eskk#keep_state			*g:eskk#keep_state*
							(デフォルト値: 0)

g:eskk#keep_state_beyond_buffer		*g:eskk#keep_state_beyond_buffer*
							(デフォルト値: 0)

g:eskk#revert_henkan_style			*g:eskk#revert_henkan_style*
							(デフォルト値: "okuri")

g:eskk#delete_implies_kakutei			*g:eskk#delete_implies_kakutei*
							(デフォルト値: 0)

g:eskk#rom_input_style			*g:eskk#rom_input_style*
							(デフォルト値: "skk")

g:eskk#auto_henkan_at_okuri_match			*g:eskk#auto_henkan_at_okuri_match*
							(デフォルト値: 1)

g:eskk#set_undo_point				*g:eskk#set_undo_point*
							(デフォルト値: 下を参照)
	デフォルト値は： >
	let g:eskk#set_undo_point = {
	\	'sticky': 1,
	\	'kakutei': 1,
	\}
<
g:eskk#context_control				*g:eskk#context_control*
							(デフォルト値: [])

g:eskk#fix_extra_okuri				*g:eskk#fix_extra_okuri*
							(デフォルト値: 1)
	 >
	▽おくr {henkan-key}
<
	 >
	▽おく*r
<
g:eskk#ignore_continuous_sticky		*g:eskk#ignore_continuous_sticky*
							(デフォルト値: 1)

g:eskk#convert_at_exact_match		*g:eskk#convert_at_exact_match*
							(デフォルト値: 0)

g:eskk#kata_convert_to_hira_at_henkan	*g:eskk#kata_convert_to_hira_at_henkan*
							(デフォルト値: 1)
	|eskk-kata-mode|において、SKK辞書を探索する前にカタカナをひらがなに変換する。
	したがってeskkはSKK辞書から候補を探し出すことができるようになる。
	(SKK辞書はひらがなとその候補しか含まないため)

g:eskk#kata_convert_to_hira_at_completion	*g:eskk#kata_convert_to_hira_at_completion*
							(デフォルト値: 1)
	|g:eskk#kata_convert_to_hira_at_henkan| と同じだが、
	|eskk-completion| において働く。





デバッグ用変数
----------------------

g:eskk#debug			*g:eskk#debug*
						(デフォルト値: 0)
	もし真なら、デバッグメッセージをコマンドラインか
	ログファイルに出力する。
	どちらに出力するかは|g:eskk#debug_out|で変更することができる。

g:eskk#debug_wait_ms	*g:eskk#debug_wait_ms*
						(デフォルト値: 0)
	もしこの変数が0より大きければ、
	指定時間 |:sleep| する。(ミリ秒)

g:eskk#debug_out		*g:eskk#debug_out*
						(デフォルト値: "file")
	"file" か "cmdline" のどちらか。
	"file" なら >
	{g:eskk#directory}/log/debug.log
<	に作られる。
	"cmdline" ならコマンドラインに出力される。

g:eskk#version			*g:eskk#version*
	現在のバージョンの数値を表す文字列。

}}}
------------------------------------------------------------------------------
コマンド					*eskk-commands* {{{

:EskkMap						*:EskkMap*
:EskkForgetRegisteredWords		*:EskkForgetRegisteredWords*
	辞書登録した単語を全て消去する。

:EskkUpdateDictionary			*:EskkUpdateDictionary*
	辞書登録した単語などを辞書に書き込む。

:EskkFixDictionary[!] [{path}]			*:EskkFixDictionary*
	壊れたSKK辞書を修正します。
	[!]をつけると確認のプロンプトを出しません。
	{path}が省略された場合はユーザ辞書を修正します。

:EskkReload						*:EskkReload*
	読み込まれた全てのautoloadスクリプトを再読み込みする。
	まだ読み込まれていないautoloadスクリプトには何もしない。
	例: autoload/eskk.vim, autoload/eskk/table.vim


}}}
------------------------------------------------------------------------------
関数					*eskk-functions* {{{

eskk#enable()			*eskk#enable()*
eskk#disable()			*eskk#disable()*
eskk#toggle()			*eskk#toggle()*
	Enable, Disable, Toggle eskk.
	This works also in |Normal-mode|, and of course |mapmode-ic|.

eskk#is_enabled()			*eskk#is_enabled()*
	Return true if eskk was enabled, false if disabled,

eskk#get_mode()			*eskk#get_mode()*
	Return String of current mode.
	NOTE: This may return invalid value if |eskk#is_enabled()| returns false.

eskk#update_dictionary()		*eskk#update_dictionary()*
	See |:EskkUpdateDictionary|.

eskk#get_default_mapped_keys()			*eskk#get_default_mapped_keys()*
	Default value of |g:eskk#mapped_keys|.

}}}
}}}
==============================================================================
アルファベットテーブル					*eskk-alphabet-table* {{{

次のようにしてアルファベット変換テーブルを定義することができる。

>
    autocmd vimrc User eskk-initialize-pre call s:eskk_initial_pre()
    function! s:eskk_initial_pre()
        " User can be allowed to modify
        " eskk global variables (`g:eskk#...`)
        " until `User eskk-initialize-pre` event.
        " So user can do something heavy process here.
        " (I'm a paranoia, eskk#table#new() is not so heavy.
        " But it loads autoload/vice.vim recursively)
        let t = eskk#table#new('rom_to_hira*', 'rom_to_hira')
        call t.add_map('~', '～')
        call t.add_map('zc', '(c)')
        call t.add_map('zr', '?')
        call t.add_map('vh', '?')
        call t.add_map('vj', '?')
        call t.add_map('vk', '?')
        call t.add_map('vl', '?')
        call t.add_map('jva', '?ぁ')
        call t.add_map('jvi', '?ぃ')
        call t.add_map('jvu', '?')
        call t.add_map('jve', '?ぇ')
        call t.add_map('jvo', '?ぉ')
        call t.add_map('z ', '　')
        call eskk#register_mode_table('hira', t)
    endfunction

}}}
==============================================================================
モード					*eskk-modes* {{{

------------------------------------------------------------------------------
hiraモード				*eskk-hira-mode* {{{
}}}
------------------------------------------------------------------------------
kataモード				*eskk-kata-mode* {{{
}}}
------------------------------------------------------------------------------
hankataモード				*eskk-hankata-mode* {{{
}}}
------------------------------------------------------------------------------
abbrevモード				*eskk-abbrev-mode* {{{
}}}
------------------------------------------------------------------------------
asciiモード				*eskk-ascii-mode* {{{
}}}
------------------------------------------------------------------------------
zeneiモード				*eskk-zenei-mode* {{{
}}}

}}}
==============================================================================
フェーズ					*eskk-phases* {{{

------------------------------------------------------------------------------
ノーマルフェーズ			*eskk-normal-phase* {{{
}}}
------------------------------------------------------------------------------
変換フェーズ			*eskk-henkan-phase* {{{
}}}
------------------------------------------------------------------------------
送り仮名フェーズ			*eskk-okuri-phase* {{{
}}}
------------------------------------------------------------------------------
変換選択フェーズ			*eskk-henkan-select-phase* {{{
}}}

}}}
==============================================================================
補完				*eskk-completion* {{{
}}}
==============================================================================
FAQ					*eskk-faq* {{{

					*eskk-faq-broken-dict*
Q. SKK辞書が壊れてしまいました！どうすればいいですか？
A. |:EskkFixDictionary| を使ってください。

このようにeskk自体にも辞書を修正する機能はありますが、
skktoolsのskkdic-expr2などでも直すことが可能のようです。
>
	# catで繋ぎ直しても
	$ cat skk-dict >>skk-dict.new
	# このように整形してくれる
	$ skkdic-expr2 skk-dict.new >skk-dict

また壊れたのがeskkのせいであるならば、
バグレポートを送っていただけると幸いです。

}}}
==============================================================================
TODO						*eskk-todo* {{{
}}}
==============================================================================
CHANGELOG						*eskk-changelog* {{{

0.0.0:
- 

}}}
==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl:noet:fdm=marker:fen
